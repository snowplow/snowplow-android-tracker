apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

apply plugin: 'maven-publish'

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.1'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 2
        versionName "$project.version"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main  {
            java {
                srcDir 'src/main/java'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.gms:play-services:6.5.87'

    // Android HTTP
    compile 'org.apache.httpcomponents:httpclient-android:4.3.3'

    // SLF4J logging API
    compile 'org.slf4j:slf4j-simple:1.7.7'

    // Jackson JSON processor
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1.1'

    // RxJava
    compile 'io.reactivex:rxjava:1.0.3'

    // SquareUp
    compile 'com.squareup.okhttp:okhttp:2.1.0'

    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
}

// build JAR file
task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$buildDir/intermediates/classes/release/"
}

task androidSourcesJar(type: Jar, dependsOn: assembleRelease) {
    from "$projectDir/src/main/java"
}

publishing {
    publications {
        maven(MavenPublication) {

            groupId "$project.group"
            version "$project.version"

            artifact androidReleaseJar

            artifact androidSourcesJar {
                classifier "sources"
            }

        }
    }
    repositories {
        maven {
            url "$buildDir/repo" // change to point to your repo, e.g. http://my.org/repo
        }
    }
}

build {
    project.ext.set("outputDir", "$projectDir/src/main/java/com/snowplowanalytics/snowplow/tracker")
    doFirst {
        println outputDir
        def srcFile = new File((String)outputDir, "Version.java")
        srcFile.parentFile.mkdirs()
        srcFile.write(
                """/*
 * Copyright (c) 2014 Snowplow Analytics Ltd. All rights reserved.
 *
 * This program is licensed to you under the Apache License Version 2.0,
 * and you may not use this file except in compliance with the Apache License Version 2.0.
 * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the Apache License Version 2.0 is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.
 */

package com.snowplowanalytics.snowplow.tracker.android;

// DO NOT EDIT. AUTO-GENERATED.
public class Version {
    static final String TRACKER = "andr-$project.version";
    static final String VERSION = "$project.version";
}
""")
    }
}
