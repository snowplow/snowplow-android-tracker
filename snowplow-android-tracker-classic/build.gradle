apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 1
        versionName "$project.version"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':snowplow-android-core')
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.1.2'
}

// build JAR file
task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$projectDir/../snowplow-android-core/build/intermediates/classes/release/"
    from "$buildDir/intermediates/classes/release/"
}

task androidSourcesJar(type: Jar, dependsOn: assembleRelease) {
    from "$projectDir/../snowplow-android-core/src/main/java"
    from "$projectDir/src/main/java"
}

// generate javadoc
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        title = "Documentation for snowplow-android-tracker-classic $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

publishing {
    publications {
        maven(MavenPublication) {

            groupId "$project.group"
            version "$project.version"

            artifact androidReleaseJar

            artifact androidSourcesJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url "$buildDir/repo" // change to point to your repo, e.g. http://my.org/repo
        }
    }
}
