plugins {
    id "com.jfrog.bintray" version "1.5"
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = "0.8.5"
}

project.ext {
    archLifecycleVersion = "1.1.1"
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    useLibrary 'android.test.base'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "$project.version"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "TRACKER_LABEL", "\"andr-$project.version\""
            buildConfigField "String", "TRACKER_VERSION", "\"$project.version\""

            testCoverageEnabled = true
        }
        release {
            buildConfigField "String", "TRACKER_LABEL", "\"andr-$project.version\""
            buildConfigField "String", "TRACKER_VERSION", "\"$project.version\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    sourceSets {
        androidTest.manifest.srcFile "src/androidTest/AndroidManifest.xml"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    // This enables long timeouts required on slow environments
    adbOptions {
        timeOutInMs 10 * 60 * 1000  // Set the timeout to 10 minutes
        installOptions "-d","-t"
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.squareup.okhttp3:okhttp:4.0.0'
    // test
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'com.google.android.gms:play-services-analytics:17.0.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.0.0'
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        title = "Documentation for snowplow-android-core $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.getJavaCompileProvider().get().source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        doFirst { classpath = files(variant.javaCompiler.classpath.files) + files(ext.androidJar) }
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        exclude '**/R.java'
    }
}

coveralls {
    jacocoReportPath "$buildDir/reports/coverage/debug/report.xml"
}

install {
    repositories.mavenInstaller {
        pom.artifactId = 'snowplow-android-tracker'
        pom.version = "$project.version"
        pom.project {
            name = 'snowplow-android-tracker'
            description = 'Snowplow event tracker for Android 16+. Add analytics to your apps and games.'
            url = 'https://github.com/snowplow/snowplow-android-tracker'
            inceptionYear = '2014'

            packaging = 'aar'
            groupId = 'com.snowplowanalytics'

            licenses {
                license {
                    name = 'The Apache Software License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution = 'repo'
                }
            }
            scm {
                connection = 'https://github.com/snowplow/snowplow-android-tracker.git'
                url = 'https://github.com/snowplow/snowplow-android-tracker'
            }
            developers {
                developer {
                    name = 'Joshua Beemster'
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_SNOWPLOW_MAVEN_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_SNOWPLOW_MAVEN_API_KEY')

    configurations = ['archives']

    publish = true

    pkg {
        repo = 'snowplow-maven'
        name = 'snowplow-android-tracker'
        group = 'com.snowplowanalytics'
        userOrg = 'snowplow'

        websiteUrl = 'https://github.com/snowplow/snowplow-android-tracker'
        vcsUrl = 'https://github.com/snowplow/snowplow-android-tracker'
        issueTrackerUrl = 'https://github.com/snowplow/snowplow-android-tracker/issues'

        licenses = ['Apache-2.0']

        version.name = "$project.version"
    }
}

repositories {
    mavenCentral()
}

