/*
 * Copyright (c) 2015-2023 Snowplow Analytics Ltd. All rights reserved.
 *
 * This program is licensed to you under the Apache License Version 2.0,
 * and you may not use this file except in compliance with the Apache License Version 2.0.
 * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the Apache License Version 2.0 is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.
 */
package com.snowplowanalytics.snowplow.event

import android.content.Intent
import android.net.Uri
import com.android.installreferrer.api.ReferrerDetails

/** A deep-link received in the app.  
 * @param url URL in the received deep-link.
 */
class DeepLinkReceived(val url: String) : AbstractSelfDescribing() {
    
    /** Referrer URL, source of this deep-link.  */
    var referrer: String? = null

    /** The event schema */
    override val schema: String
        get() = Companion.schema

    override val dataPayload: Map<String, Any?>
        get() {
            val payload = HashMap<String, Any?>()
            payload[PARAM_URL] = url
            referrer?.let { payload[PARAM_REFERRER] = it }

            return payload
        }
    
    // Builder methods
    
    /** Referrer URL, source of this deep-link.  */
    fun referrer(referrer: String?): DeepLinkReceived {
        this.referrer = referrer
        return this
    }
    
    companion object {
        const val schema = "iglu:com.snowplowanalytics.mobile/deep_link_received/jsonschema/1-0-0"
        const val PARAM_REFERRER = "referrer"
        const val PARAM_URL = "url"

        /**
         * Convenient factory method that generates the event from the Intent received by the Activity.
         * The Activity can store in the Intent the deep link url and the referrer url (if available).
         * @param intent Intent received by the Activity.
         * @return a new event.
         */
        @JvmStatic
        fun fromIntent(intent: Intent?): DeepLinkReceived? {
            if (intent == null) return null
            
            val uri = intent.data ?: return null
            val deepLinkUrl = uri.toString()
            var referrer: String? = null
            val extras = intent.extras
            
            if (extras != null) {
                val referrerUri = extras[Intent.EXTRA_REFERRER] as? Uri?
                referrerUri?.let { referrer = it.toString() }
            }
            return DeepLinkReceived(deepLinkUrl).referrer(referrer)
        }

        /**
         * Convenient factory method that generates the event from the ReferrerDetails generated by
         * the Install Referrer Library. It requires a dependency to `com.android.installreferrer:installreferrer`.
         * 
         * @param referrerDetails Details received by the InstallReferrer.
         * @return a new event.
         */
        @JvmStatic
        fun fromReferrerDetails(referrerDetails: ReferrerDetails?): DeepLinkReceived? {
            if (referrerDetails == null) return null
            
            val deepLinkUrl = referrerDetails.installReferrer ?: return null
            return DeepLinkReceived(deepLinkUrl)
        }
    }
}
